/*******************************************************************************
* Instrument: Test_RNG
*
* %I
* Written by: Peter Willendrup
* Date: Oct 2nd, 2020
* Origin: DTU
* %INSTRUMENT_SITE: Tests
*
* Instrument to get test output from random number generator via MCPL.
*
* %D
* Instrument to get test output from random number generator via MCPL.
* 
* The instrument generates 5 randon numbers pr. particle, and encode 
* thes into parameters x, y, z, p and t in an MCPL file.
*
* Normalisation is chosen as to make the numbers easily readable
* numbers between 0 and 1,  using  mcpltool, i.e: 
* (other columns left out for clarity)
*
* index     x[cm]       y[cm]       z[cm]    time[ms]      weight
*    0  4.7716e-14  1.1445e-08   0.0030424    0.84209     0.23464
*    1    0.052938     0.24235     0.31045    0.75907     0.48355
*    2     0.10564     0.16617     0.74402    0.63349     0.56875
*    3     0.14932     0.32095    0.021348    0.54636     0.15253
*    4     0.28277     0.87852     0.16528    0.76655    0.016315
*    5     0.82321     0.95137     0.84491    0.91095     0.35857
*    6     0.22836     0.84944     0.50107    0.46494     0.32294
*    7     0.47637     0.45936     0.19632    0.20068     0.59062
*    8     0.56553     0.75704     0.33059    0.49076     0.29758
*    9     0.15809      0.7943     0.83793    0.57469     0.28235
*
* Example: Par1=1
*
* %P
* Par1: [1] Dummy parameter
*
* %L
* <reference/HTML link>
*
* %E
*******************************************************************************/
DEFINE INSTRUMENT Test_RNG(Par1=1)

DECLARE
%{
%}

INITIALIZE
%{
%}

TRACE

COMPONENT Arm = Arm()
  AT (0,0,0) ABSOLUTE
EXTEND %{
  x = rand01()/100;
  y = rand01()/100;
  z = rand01()/100;
  p = rand01();
  t = rand01()/1000;
%}

COMPONENT out = MCPL_output_GPU(filename="rngout")
  AT (0,0,0) ABSOLUTE

FINALLY
%{
%}

END
